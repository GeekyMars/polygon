# ЗАДАНИЕ 13
import numpy as np  # Тут я импортирую библиотеку НАМПАЙ (NumPy)

# МАССИВ
array = np.array([1, 1, 2, 2, 2, 3, 3, 1, 1, 1, 1])

# Здесь мы используем функцию diff,
# чтобы вычислить разности между соседними элементами массива
differences = np.diff(array)

# Теперь я нахожу индексы, где разности не равны нулю
# Эти индексы показывают, где в массиве изменяются элементы
change_points = np.where(differences != 0)[0]

# Добавляю фиктивные границы в начало и конец массива
# Это нужно, чтобы правильно вычислить длины последовательностей одинаковых элементов
boundaries = np.concatenate(([0], change_points + 1, [len(array)]))

# Вычисляю длины последовательностей одинаковых элементов,
# находя разности между соседними границами
sequence_lengths = np.diff(boundaries)

# Нахожу максимальную длину последовательности одинаковых элементов
longest_sequence_length = np.max(sequence_lengths)

# Вывожу результат на экран
print("Длина самой длинной последовательности одинаковых элементов:", longest_sequence_length)
